[{"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Home.js":"4","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\store.js":"5","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\rootReducer.js":"6","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-types.js":"7","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-reducers.js":"8","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\ContactList.js":"9","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\Elements.js":"10","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\WorkflowTab.js":"11","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DetailsTab.js":"12","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DelayTab.js":"13","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\SMSTab.js":"14","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ConditionTab.js":"15","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\index.js":"16","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ContactsTab.js":"17","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\index.js":"18","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\OptionModal.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":3375,"mtime":1609869707793,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1894,"mtime":1609836883368,"results":"24","hashOfConfig":"21"},{"size":357,"mtime":1609741315533,"results":"25","hashOfConfig":"21"},{"size":214,"mtime":1609687053458,"results":"26","hashOfConfig":"21"},{"size":400,"mtime":1609864942551,"results":"27","hashOfConfig":"21"},{"size":1960,"mtime":1609867007725,"results":"28","hashOfConfig":"21"},{"size":8600,"mtime":1609753112769,"results":"29","hashOfConfig":"21"},{"size":3470,"mtime":1609866168234,"results":"30","hashOfConfig":"21"},{"size":3020,"mtime":1609869657148,"results":"31","hashOfConfig":"21"},{"size":1196,"mtime":1609864783353,"results":"32","hashOfConfig":"21"},{"size":4299,"mtime":1609869677641,"results":"33","hashOfConfig":"21"},{"size":2906,"mtime":1609869691640,"results":"34","hashOfConfig":"21"},{"size":3202,"mtime":1609869668674,"results":"35","hashOfConfig":"21"},{"size":1040,"mtime":1609868916628,"results":"36","hashOfConfig":"21"},{"size":2675,"mtime":1609869650069,"results":"37","hashOfConfig":"21"},{"size":852,"mtime":1609865958688,"results":"38","hashOfConfig":"21"},{"size":5083,"mtime":1609864840651,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"3uncbm",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\index.js",[],["83","84"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\App.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Home.js",["85","86"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\store.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\rootReducer.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-types.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-reducers.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\ContactList.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\Elements.js",["87","88","89"],"import React ,{useState} from 'react';\r\nimport {Card , CardContent ,Typography } from '@material-ui/core';\r\nimport {useSelector , useDispatch} from 'react-redux';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OptionModal from './OptionModal';\r\n\r\n  export  function StartNode() {  \r\n    const trigger = useSelector(state=> state.workflow.trigger);\r\n    return ( \r\n      <Card>\r\n        <CardContent  > \r\n        <Typography variant=\"caption\">\r\n          {trigger ? `${trigger}` : \"Set Workflow Trigger\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n     );\r\n  }\r\n\r\n  export  function AddStepNode() {\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return ( \r\n      open ?\r\n      <Card style={{width: \"320px\"}}>\r\n      <CardContent  > \r\n        <OptionModal open handleClose={handleClose}/>\r\n        </CardContent>\r\n      </Card>\r\n        :\r\n        <Card style={{height: \"70px\", width: \"200px\"}} onClick={handleOpen}>\r\n          <CardContent  > \r\n            <AddCircleOutlineIcon size=\"small\"/><br/>\r\n            <Typography variant=\"caption\">\r\n              Click on plus icon to add step\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function ContactsNode() {\r\n    const contact = useSelector(state=> state.workflow.contacts);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              {contact ? \"Select Contacts\"  : \"Contacts Selected\"}\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function SMSNode() {\r\n    const sms = useSelector(state=> state.workflow.smsDetails.smsTitle);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              {sms ? \"Set SMS Details\"  : \"SMS Set\"}\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function DelayNode() {\r\n\r\n    const delay = useSelector(state=> state.workflow.delay);\r\n\r\n    return ( \r\n      <Card >\r\n        <CardContent> \r\n          <Typography variant=\"caption\">\r\n            {`\"Delay :\" ${delay}` || \"Set Delay\"}\r\n            </Typography>\r\n        </CardContent>\r\n      </Card>\r\n     );\r\n  }\r\n\r\n  export  function YesNode() {\r\n    const condition = useSelector(state=> state.workflow.condition.readSMS);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              Yes\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function NoNode() {\r\n    const condition = useSelector(state=> state.workflow.condition.readSMS);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              No\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function ConditionNode() {\r\n    const condition = useSelector(state=> state.workflow.condition.readSMS);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              {condition ? \"Select Condition\"  : \"Condition Selected\"}\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\nexport default  StartNode;\r\n\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\WorkflowTab.js",["90"],"import React ,{useState} from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {FormControl , Select ,TextField , Typography , Paper , Button} from '@material-ui/core';\r\n\r\nimport {AddStepNode} from \"../../Components/Flowchart/Elements\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n      width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n}\r\n}));\r\n \r\n\r\nfunction WorkFlowTab() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [trigger, setTrigger] = useState(\"\")\r\n\r\n  let history = useHistory();\r\n\r\n  const handleSave = ()=>{\r\n    dispatch({ type: 'SET_WORKFLOW_DETAILS' , workflowName: name ,trigger: trigger , \r\n    add_element:{id: 2, parent: {id: 1},childOf:{number: 1}, name: 'workflow',compo: <AddStepNode/>, children: []}})\r\n    history.push(\"/details\");\r\n  }\r\n\r\n  return  (\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n         <div>\r\n            <Typography gutterBottom variant=\"subtitle1\" align=\"left\">Workflow Name</Typography>\r\n            <TextField \r\n              onChange={e=>setName(e.target.value)}\r\n              value={name} \r\n              id=\"outlined-basic\"  \r\n              variant=\"outlined\" \r\n              size=\"small\" \r\n              className={classes.formControl}\r\n              />\r\n        </div>\r\n        <div>\r\n            <Typography gutterBottom variant=\"subtitle1\" align=\"left\">Trigger</Typography>\r\n            <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n                <Select\r\n                native\r\n                displayEmpty\r\n                value={trigger}\r\n                onChange={e=>setTrigger(e.target.value)}\r\n                inputProps={{\r\n                    name: 'trigger',\r\n                    id: 'outlined-age-native-simple',\r\n                }}\r\n                >\r\n                <option aria-label=\"None\" value=\"\"/>\r\n                <option value={\"When subscriber joins a list\"}>\r\n                    When subscriber joins a list\r\n                </option>\r\n                <option value={\"The anniversary of a date\"}>\r\n                    The anniversary of a date\r\n                </option>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n            <div>\r\n                <Button \r\n                onClick={handleSave}\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                size=\"small\" \r\n                className={classes.button}>\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                variant=\"contained\" size=\"small\"className={classes.button}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n    </form>\r\n  );\r\n};\r\n  export default WorkFlowTab;","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DetailsTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DelayTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\SMSTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ConditionTab.js",["91"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\index.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ContactsTab.js",["92"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\index.js",["93"],"import React from 'react';\r\nimport Tree from 'react-vertical-tree';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function FlowChart() {\r\n\r\n  const elements = useSelector(state=> state.workflow.elements);\r\n\r\n  function getNestedChildren(arr, childOf) {\r\n    var children = [];\r\n    for(var i =0; i < arr.length; ++i) {\r\n        if(arr[i].childOf.number == childOf.number) {\r\n            var grandChildren = getNestedChildren(arr, {number: arr[i].id})\r\n\r\n            if(grandChildren.length) {\r\n                arr[i].children = grandChildren;\r\n            }\r\n            children.push( arr[i]);\r\n        }\r\n    }\r\n    return children;\r\n  }\r\n\r\n    return (\r\n      <>\r\n       <Tree \r\n        data={getNestedChildren(elements,{number: 0})} \r\n        direction \r\n        render={ item => <>{item.compo}</>}\r\n        />\r\n      </>\r\n    );\r\n  }","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\OptionModal.js",["94"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Card , CardContent , Grid , Typography} from '@material-ui/core';\r\nimport {useSelector , useDispatch} from 'react-redux';\r\nimport SmsOutlinedIcon from '@material-ui/icons/SmsOutlined';\r\nimport PermContactCalendarOutlinedIcon from '@material-ui/icons/PermContactCalendarOutlined';\r\nimport WatchLaterOutlinedIcon from '@material-ui/icons/WatchLaterOutlined';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: 20\r\n  },\r\n  title:{\r\n    fontSize: \"12px\",\r\n  },\r\n  card:{\r\n    height:\"60px\",\r\n    width: \"70px\",\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#d3d3d3 !important\",\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal({open,handleClose}) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();    \r\n  const length = useSelector(state=> state.workflow.elements.length);\r\n\r\n  const handleContactClick = ()=>{\r\n      dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n      history.push(\"/contacts\");\r\n  }\r\n  const handleSMSClick = ()=>{\r\n    dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n      history.push(\"/sms\");\r\n}\r\nconst handleDelayClick = ()=>{\r\n  dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n  history.push(\"/delay\");\r\n}\r\nconst handleConditionClick = ()=>{\r\n  dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n  history.push(\"/condition\");\r\n}\r\n\r\n  return (\r\n        <div className={classes.paper}>\r\n          <Typography align=\"center\" className={classes.title}>\r\n              Add Next Steps to Your Workflow\r\n            </Typography>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\" >\r\n                <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleContactClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\" >\r\n                              <Grid item>\r\n                                 <PermContactCalendarOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                    Contacts\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleSMSClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\" >\r\n                              <Grid item>\r\n                                <SmsOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                   SMS\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleDelayClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\"  >\r\n                              <Grid item>\r\n                                 <WatchLaterOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                 Delay\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleConditionClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\" >\r\n                              <Grid item>\r\n                                  <SettingsOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                Condition\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n          </Grid>\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":16},{"ruleId":"99","severity":1,"message":"103","line":3,"column":28,"nodeType":"101","messageId":"102","endLine":3,"endColumn":35},{"ruleId":"99","severity":1,"message":"104","line":3,"column":23,"nodeType":"101","messageId":"102","endLine":3,"endColumn":34},{"ruleId":"99","severity":1,"message":"105","line":92,"column":11,"nodeType":"101","messageId":"102","endLine":92,"endColumn":20},{"ruleId":"99","severity":1,"message":"105","line":105,"column":11,"nodeType":"101","messageId":"102","endLine":105,"endColumn":20},{"ruleId":"99","severity":1,"message":"106","line":5,"column":56,"nodeType":"101","messageId":"102","endLine":5,"endColumn":61},{"ruleId":"99","severity":1,"message":"106","line":5,"column":45,"nodeType":"101","messageId":"102","endLine":5,"endColumn":50},{"ruleId":"99","severity":1,"message":"107","line":29,"column":23,"nodeType":"101","messageId":"102","endLine":29,"endColumn":38},{"ruleId":"108","severity":1,"message":"109","line":12,"column":34,"nodeType":"110","messageId":"111","endLine":12,"endColumn":36},{"ruleId":"99","severity":1,"message":"112","line":33,"column":9,"nodeType":"101","messageId":"102","endLine":33,"endColumn":15},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'useDispatch' is defined but never used.","'condition' is assigned a value but never used.","'Paper' is defined but never used.","'setrowsSelected' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'length' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]