[{"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\store.js":"4","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\rootReducer.js":"5","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-types.js":"6","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-reducers.js":"7","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\ContactList.js":"8","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\Elements.js":"9","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\WorkflowTab.js":"10","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DetailsTab.js":"11","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DelayTab.js":"12","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\SMSTab.js":"13","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ConditionTab.js":"14","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ContactsTab.js":"15","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\index.js":"16","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\OptionModal.js":"17","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\routes.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":2407,"mtime":1614705290398,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":367,"mtime":1614705202574,"results":"23","hashOfConfig":"20"},{"size":212,"mtime":1614705199721,"results":"24","hashOfConfig":"20"},{"size":402,"mtime":1614705193494,"results":"25","hashOfConfig":"20"},{"size":2072,"mtime":1614705189839,"results":"26","hashOfConfig":"20"},{"size":9306,"mtime":1614705250376,"results":"27","hashOfConfig":"20"},{"size":3079,"mtime":1614705211485,"results":"28","hashOfConfig":"20"},{"size":2977,"mtime":1614944094020,"results":"29","hashOfConfig":"20"},{"size":1136,"mtime":1614705235653,"results":"30","hashOfConfig":"20"},{"size":3811,"mtime":1614944068099,"results":"31","hashOfConfig":"20"},{"size":2933,"mtime":1614944085174,"results":"32","hashOfConfig":"20"},{"size":3358,"mtime":1614944041150,"results":"33","hashOfConfig":"20"},{"size":2677,"mtime":1614944050909,"results":"34","hashOfConfig":"20"},{"size":825,"mtime":1614705215897,"results":"35","hashOfConfig":"20"},{"size":4345,"mtime":1614944245467,"results":"36","hashOfConfig":"20"},{"size":881,"mtime":1614943974985,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qpcyqr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\index.js",[],["81","82"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\App.js",["83"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { Drawer, makeStyles, Grid, Typography, Paper } from \"@material-ui/core\";\nimport FlowChart from \"./Components/Flowchart/index\";\nimport routes from \"./Components/routes\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(3),\n  },\n  grid: {\n    height: \"90%\",\n    width: \"100%\",\n  },\n  paperMain: {\n    height: \"98%\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <Router>\n        <Grid container direction=\"row\" spacing={1}>\n          <Grid item xs={2}>\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <Grid container spacing={1} className={classes.grid}>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Typography>Visual Workflow Builder</Typography>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={`${classes.paperMain} ${classes.paper}`}>\n                    <Switch>\n                      {routes.map((route, index) => (\n                        // Render more <Route>s with the same paths as\n                        // above, but different components this time.\n                        <Route\n                          key={index}\n                          path={route.path}\n                          exact={route.exact}\n                          children={route.sidebar}\n                        />\n                      ))}\n                    </Switch>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Drawer>\n          </Grid>\n          <Grid item xs={10}>\n            <main className={classes.content}>\n              <FlowChart />\n            </main>\n          </Grid>\n        </Grid>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\store.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\rootReducer.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-types.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-reducers.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\ContactList.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\Elements.js",["84","85","86"],"import React, { useState } from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport OptionModal from \"./OptionModal\";\r\n\r\nexport function StartNode() {\r\n  const trigger = useSelector((state) => state.workflow.trigger);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">\r\n          {trigger ? `${trigger}` : \"Set Workflow Trigger\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function AddStepNode() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return open ? (\r\n    <Card style={{ width: \"320px\" }}>\r\n      <CardContent>\r\n        <OptionModal open handleClose={handleClose} />\r\n      </CardContent>\r\n    </Card>\r\n  ) : (\r\n    <Card style={{ height: \"70px\", width: \"200px\" }} onClick={handleOpen}>\r\n      <CardContent>\r\n        <AddCircleOutlineIcon size=\"small\" />\r\n        <br />\r\n        <Typography variant=\"caption\">\r\n          Click on plus icon to add step\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function ContactsNode() {\r\n  const contact = useSelector((state) => state.workflow.contacts);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">\r\n          {contact ? \"Select Contacts\" : \"Contacts Selected\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function SMSNode() {\r\n  const sms = useSelector((state) => state.workflow.smsDetails.smsTitle);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">\r\n          {sms ? \"Set SMS Details\" : \"SMS Set\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function DelayNode() {\r\n  const delay = useSelector((state) => state.workflow.delay);\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">\r\n          {`\"Delay :\" ${delay}` || \"Set Delay\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function YesNode() {\r\n  const condition = useSelector((state) => state.workflow.condition.readSMS);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">Yes</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function NoNode() {\r\n  const condition = useSelector((state) => state.workflow.condition.readSMS);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">No</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function ConditionNode() {\r\n  const condition = useSelector((state) => state.workflow.condition.readSMS);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"caption\">\r\n          {condition ? \"Select Condition\" : \"Condition Selected\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default StartNode;\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\WorkflowTab.js",["87"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { AddStepNode } from \"../../Components/Flowchart/Elements\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction WorkFlowTab() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [trigger, setTrigger] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const handleSave = () => {\r\n    dispatch({\r\n      type: \"SET_WORKFLOW_DETAILS\",\r\n      workflowName: name,\r\n      trigger: trigger,\r\n      add_element: {\r\n        id: 2,\r\n        parent: { id: 1 },\r\n        childOf: { number: 1 },\r\n        name: \"workflow\",\r\n        compo: <AddStepNode />,\r\n        children: [],\r\n      },\r\n    });\r\n    history.push(\"/workflow_builder/details\");\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <Typography gutterBottom variant=\"subtitle1\" align=\"left\">\r\n          Workflow Name\r\n        </Typography>\r\n        <TextField\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.formControl}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Typography gutterBottom variant=\"subtitle1\" align=\"left\">\r\n          Trigger\r\n        </Typography>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n          size=\"small\"\r\n        >\r\n          <Select\r\n            native\r\n            displayEmpty\r\n            value={trigger}\r\n            onChange={(e) => setTrigger(e.target.value)}\r\n            inputProps={{\r\n              name: \"trigger\",\r\n              id: \"outlined-age-native-simple\",\r\n            }}\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value={\"When subscriber joins a list\"}>\r\n              When subscriber joins a list\r\n            </option>\r\n            <option value={\"The anniversary of a date\"}>\r\n              The anniversary of a date\r\n            </option>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <Button\r\n          onClick={handleSave}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" size=\"small\" className={classes.button}>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default WorkFlowTab;\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DetailsTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DelayTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\SMSTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ConditionTab.js",["88"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  YesNode,\r\n  NoNode,\r\n  AddStepNode,\r\n} from \"../../Components/Flowchart/Elements\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ConditionTab() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [read, setRead] = useState(\"\");\r\n\r\n  const length = useSelector((state) => state.workflow.elements.length);\r\n\r\n  const handleSave = () => {\r\n    dispatch({\r\n      type: \"SET_CONDITION\",\r\n      condition: { readSMS: read },\r\n      add_yes_element: {\r\n        id: length + 1,\r\n        parent: { id: length },\r\n        childOf: { number: length },\r\n        name: \"Yes\",\r\n        compo: <YesNode />,\r\n        children: [],\r\n      },\r\n      add_no_element: {\r\n        id: length + 2,\r\n        parent: { id: length },\r\n        childOf: { number: length },\r\n        name: \"No\",\r\n        compo: <NoNode />,\r\n        children: [],\r\n      },\r\n      add_step_element: {\r\n        id: length + 3,\r\n        parent: { id: length + 2 },\r\n        childOf: { number: length + 2 },\r\n        name: \"stepNode\",\r\n        compo: <AddStepNode />,\r\n        children: [],\r\n      },\r\n    });\r\n    dispatch({\r\n      type: \"ADD_STEP_ELEMENT\",\r\n      add_step_element: {\r\n        id: length + 4,\r\n        parent: { id: length + 1 },\r\n        childOf: { number: length + 1 },\r\n        name: \"stepNode\",\r\n        compo: <AddStepNode />,\r\n        children: [],\r\n      },\r\n    });\r\n    history.push(\"/workflow_builder/details\");\r\n  };\r\n  const handleCancel = () => {\r\n    history.push(\"/workflow_builder/details\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <Typography gutterBottom variant=\"subtitle1\" align=\"left\">\r\n          Read SMS\r\n        </Typography>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n          size=\"small\"\r\n        >\r\n          <Select\r\n            native\r\n            displayEmpty\r\n            value={read}\r\n            onChange={(e) => setRead(e.target.value)}\r\n            inputProps={{\r\n              name: \"trigger\",\r\n              id: \"outlined-age-native-simple\",\r\n            }}\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value={\"Yes\"}>Yes</option>\r\n            <option value={\"No\"}>No</option>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <Button\r\n          onClick={handleSave}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button\r\n          onClick={handleCancel}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default ConditionTab;\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ContactsTab.js",["89"],"import React, { useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ContactsNode, AddStepNode } from \"../../Components/Flowchart/Elements\";\r\nimport ContactList from \"../ContactList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    height: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { field: \"contactNum\", headerName: \"Contact Number\", width: \"100%\" },\r\n];\r\n\r\nexport default function ContactsTab() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [rowSelected, setrowsSelected] = useState([]);\r\n\r\n  const handleRowSelection = (RowSelectedParams) => {\r\n    rowSelected.push(RowSelectedParams.data.id);\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const length = useSelector((state) => state.workflow.elements.length);\r\n\r\n  const handleSave = () => {\r\n    dispatch({\r\n      type: \"CONTACTS_SELECTED\",\r\n      contactsSelected: rowSelected,\r\n      add_element: {\r\n        id: length + 1,\r\n        parent: { id: length },\r\n        childOf: { number: length },\r\n        name: \"contacs\",\r\n        compo: <ContactsNode />,\r\n        children: [],\r\n      },\r\n    });\r\n    dispatch({\r\n      type: \"ADD_STEP_ELEMENT\",\r\n      add_step_element: {\r\n        id: length + 2,\r\n        parent: { id: length + 1 },\r\n        childOf: { number: length + 1 },\r\n        name: \"stepNode\",\r\n        compo: <AddStepNode />,\r\n        children: [],\r\n      },\r\n    });\r\n    history.push(\"/workflow_builder/details\");\r\n  };\r\n  const handleCancel = () => {\r\n    history.push(\"/workflow_builder/details\");\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      className={classes.grid}\r\n    >\r\n      <Grid item style={{ height: 380, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={ContactList}\r\n          columns={columns}\r\n          onRowSelected={handleRowSelection}\r\n          checkboxSelection\r\n          hideFooter\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          onClick={handleSave}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button\r\n          onClick={handleCancel}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\index.js",["90"],"import React from \"react\";\r\nimport Tree from \"react-vertical-tree\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function FlowChart() {\r\n  const elements = useSelector((state) => state.workflow.elements);\r\n\r\n  function getNestedChildren(arr, childOf) {\r\n    var children = [];\r\n    for (var i = 0; i < arr.length; ++i) {\r\n      if (arr[i].childOf.number == childOf.number) {\r\n        var grandChildren = getNestedChildren(arr, { number: arr[i].id });\r\n\r\n        if (grandChildren.length) {\r\n          arr[i].children = grandChildren;\r\n        }\r\n        children.push(arr[i]);\r\n      }\r\n    }\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tree\r\n        data={getNestedChildren(elements, { number: 0 })}\r\n        direction\r\n        render={(item) => <>{item.compo}</>}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\OptionModal.js",["91"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\routes.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":50,"nodeType":"98","messageId":"99","endLine":1,"endColumn":54},{"ruleId":"96","severity":1,"message":"100","line":3,"column":23,"nodeType":"98","messageId":"99","endLine":3,"endColumn":34},{"ruleId":"96","severity":1,"message":"101","line":91,"column":9,"nodeType":"98","messageId":"99","endLine":91,"endColumn":18},{"ruleId":"96","severity":1,"message":"101","line":102,"column":9,"nodeType":"98","messageId":"99","endLine":102,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":10,"column":3,"nodeType":"98","messageId":"99","endLine":10,"endColumn":8},{"ruleId":"96","severity":1,"message":"102","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":9,"endColumn":8},{"ruleId":"96","severity":1,"message":"103","line":29,"column":23,"nodeType":"98","messageId":"99","endLine":29,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":11,"column":33,"nodeType":"106","messageId":"107","endLine":11,"endColumn":35},{"ruleId":"96","severity":1,"message":"108","line":33,"column":9,"nodeType":"98","messageId":"99","endLine":33,"endColumn":15},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'condition' is assigned a value but never used.","'Paper' is defined but never used.","'setrowsSelected' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'length' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]