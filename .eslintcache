[{"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Home.js":"4","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\store.js":"5","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\rootReducer.js":"6","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-types.js":"7","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-reducers.js":"8","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\ContactList.js":"9","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\Elements.js":"10","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\WorkflowTab.js":"11","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DetailsTab.js":"12","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DelayTab.js":"13","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\SMSTab.js":"14","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ConditionTab.js":"15","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\index.js":"16","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ContactsTab.js":"17","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\index.js":"18","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\OptionModal.js":"19","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\routes.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2425,"mtime":1614704920851,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2099,"mtime":1614703666671,"results":"25","hashOfConfig":"22"},{"size":357,"mtime":1609741315533,"results":"26","hashOfConfig":"22"},{"size":214,"mtime":1609687053458,"results":"27","hashOfConfig":"22"},{"size":400,"mtime":1609864942551,"results":"28","hashOfConfig":"22"},{"size":1960,"mtime":1609867007725,"results":"29","hashOfConfig":"22"},{"size":8600,"mtime":1609753112769,"results":"30","hashOfConfig":"22"},{"size":3470,"mtime":1609866168234,"results":"31","hashOfConfig":"22"},{"size":2996,"mtime":1609869938073,"results":"32","hashOfConfig":"22"},{"size":1196,"mtime":1609864783353,"results":"33","hashOfConfig":"22"},{"size":4251,"mtime":1609869934216,"results":"34","hashOfConfig":"22"},{"size":2858,"mtime":1609869936073,"results":"35","hashOfConfig":"22"},{"size":3154,"mtime":1609869932234,"results":"36","hashOfConfig":"22"},{"size":1077,"mtime":1609871320526,"results":"37","hashOfConfig":"22"},{"size":2627,"mtime":1609869945241,"results":"38","hashOfConfig":"22"},{"size":852,"mtime":1609865958688,"results":"39","hashOfConfig":"22"},{"size":5083,"mtime":1609864840651,"results":"40","hashOfConfig":"22"},{"size":1025,"mtime":1614704750393,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"3uncbm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\index.js",[],["89","90"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\App.js",["91","92"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Home.js",["93","94"],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\store.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\rootReducer.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-types.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\redux\\Workflow\\workflow-reducers.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\ContactList.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\Elements.js",["95","96","97"],"import React ,{useState} from 'react';\r\nimport {Card , CardContent ,Typography } from '@material-ui/core';\r\nimport {useSelector , useDispatch} from 'react-redux';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OptionModal from './OptionModal';\r\n\r\n  export  function StartNode() {  \r\n    const trigger = useSelector(state=> state.workflow.trigger);\r\n    return ( \r\n      <Card>\r\n        <CardContent  > \r\n        <Typography variant=\"caption\">\r\n          {trigger ? `${trigger}` : \"Set Workflow Trigger\"}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n     );\r\n  }\r\n\r\n  export  function AddStepNode() {\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return ( \r\n      open ?\r\n      <Card style={{width: \"320px\"}}>\r\n      <CardContent  > \r\n        <OptionModal open handleClose={handleClose}/>\r\n        </CardContent>\r\n      </Card>\r\n        :\r\n        <Card style={{height: \"70px\", width: \"200px\"}} onClick={handleOpen}>\r\n          <CardContent  > \r\n            <AddCircleOutlineIcon size=\"small\"/><br/>\r\n            <Typography variant=\"caption\">\r\n              Click on plus icon to add step\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function ContactsNode() {\r\n    const contact = useSelector(state=> state.workflow.contacts);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              {contact ? \"Select Contacts\"  : \"Contacts Selected\"}\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function SMSNode() {\r\n    const sms = useSelector(state=> state.workflow.smsDetails.smsTitle);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              {sms ? \"Set SMS Details\"  : \"SMS Set\"}\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function DelayNode() {\r\n\r\n    const delay = useSelector(state=> state.workflow.delay);\r\n\r\n    return ( \r\n      <Card >\r\n        <CardContent> \r\n          <Typography variant=\"caption\">\r\n            {`\"Delay :\" ${delay}` || \"Set Delay\"}\r\n            </Typography>\r\n        </CardContent>\r\n      </Card>\r\n     );\r\n  }\r\n\r\n  export  function YesNode() {\r\n    const condition = useSelector(state=> state.workflow.condition.readSMS);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              Yes\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function NoNode() {\r\n    const condition = useSelector(state=> state.workflow.condition.readSMS);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              No\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\n  export  function ConditionNode() {\r\n    const condition = useSelector(state=> state.workflow.condition.readSMS);\r\n    return ( \r\n        <Card >\r\n          <CardContent  > \r\n            <Typography variant=\"caption\">\r\n              {condition ? \"Select Condition\"  : \"Condition Selected\"}\r\n              </Typography>\r\n          </CardContent>\r\n         </Card>\r\n     );\r\n  }\r\n\r\nexport default  StartNode;\r\n\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\WorkflowTab.js",["98"],"import React ,{useState} from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {FormControl , Select ,TextField , Typography , Paper , Button} from '@material-ui/core';\r\n\r\nimport {AddStepNode} from \"../../Components/Flowchart/Elements\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n      width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n}\r\n}));\r\n \r\n\r\nfunction WorkFlowTab() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [trigger, setTrigger] = useState(\"\")\r\n\r\n  let history = useHistory();\r\n\r\n  const handleSave = ()=>{\r\n    dispatch({ type: 'SET_WORKFLOW_DETAILS' , workflowName: name ,trigger: trigger , \r\n    add_element:{id: 2, parent: {id: 1},childOf:{number: 1}, name: 'workflow',compo: <AddStepNode/>, children: []}})\r\n    history.push(\"/details\");\r\n  }\r\n\r\n  return  (\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n         <div>\r\n            <Typography gutterBottom variant=\"subtitle1\" align=\"left\">Workflow Name</Typography>\r\n            <TextField \r\n              onChange={e=>setName(e.target.value)}\r\n              value={name} \r\n              id=\"outlined-basic\"  \r\n              variant=\"outlined\" \r\n              size=\"small\" \r\n              className={classes.formControl}\r\n              />\r\n        </div>\r\n        <div>\r\n            <Typography gutterBottom variant=\"subtitle1\" align=\"left\">Trigger</Typography>\r\n            <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n                <Select\r\n                native\r\n                displayEmpty\r\n                value={trigger}\r\n                onChange={e=>setTrigger(e.target.value)}\r\n                inputProps={{\r\n                    name: 'trigger',\r\n                    id: 'outlined-age-native-simple',\r\n                }}\r\n                >\r\n                <option aria-label=\"None\" value=\"\"/>\r\n                <option value={\"When subscriber joins a list\"}>\r\n                    When subscriber joins a list\r\n                </option>\r\n                <option value={\"The anniversary of a date\"}>\r\n                    The anniversary of a date\r\n                </option>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n            <div>\r\n                <Button \r\n                onClick={handleSave}\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                size=\"small\" \r\n                className={classes.button}>\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                variant=\"contained\" size=\"small\"className={classes.button}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n    </form>\r\n  );\r\n};\r\n  export default WorkFlowTab;","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DetailsTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\DelayTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\SMSTab.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ConditionTab.js",["99"],"import React ,{useState} from 'react';\r\nimport {useSelector , useDispatch} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {FormControl , Select , Typography , Paper , Button} from '@material-ui/core';\r\n\r\nimport {YesNode , NoNode , AddStepNode} from \"../../Components/Flowchart/Elements\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {   \r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n      width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n}\r\n}));  \r\n\r\n\r\nfunction ConditionTab() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [read, setRead] = useState(\"\");\r\n\r\n  const length = useSelector(state=> state.workflow.elements.length);\r\n\r\n  const handleSave = ()=>{\r\n    dispatch({ type: 'SET_CONDITION' , condition: {readSMS: read} ,\r\n    add_yes_element:{id: length+1, parent: {id: length},childOf:{number: length}, name: 'Yes',compo: <YesNode/>, children: []},\r\n    add_no_element:{id: length+2, parent: {id: length},childOf:{number: length}, name: 'No',compo: <NoNode/>, children: []},\r\n    add_step_element:{id: length+3, parent: {id: length+2},childOf:{number: length+2}, name: 'stepNode',compo: <AddStepNode/>, children: []},\r\n  });\r\n    dispatch({type: 'ADD_STEP_ELEMENT',\r\n    add_step_element:{id: length+4, parent: {id: length+1},childOf:{number: length+1}, name: 'stepNode',compo: <AddStepNode/>, children: []},\r\n  })\r\n    history.push(\"/details\");\r\n  }\r\n  const handleCancel = ()=>{\r\n    history.push(\"/details\");\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return  (\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n         <div>\r\n            <Typography gutterBottom variant=\"subtitle1\" align=\"left\">Read SMS</Typography>\r\n            <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n                <Select\r\n                native\r\n                displayEmpty\r\n                value={read}\r\n                onChange={e=>setRead(e.target.value)}\r\n                inputProps={{\r\n                    name: 'trigger',\r\n                    id: 'outlined-age-native-simple',\r\n                }}\r\n                >\r\n                <option aria-label=\"None\" value=\"\"/>\r\n                <option value={\"Yes\"}>\r\n                    Yes\r\n                </option>\r\n                <option value={\"No\"}>\r\n                    No\r\n                </option>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n            <div>\r\n                <Button \r\n                onClick={handleSave}\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                size=\"small\" \r\n                className={classes.button}>\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  onClick={handleCancel}\r\n                  variant=\"contained\" \r\n                  size=\"small\"\r\n                  className={classes.button}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n    </form>\r\n  );\r\n};\r\n  export default ConditionTab;","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\index.js",[],"C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Sidebar\\ContactsTab.js",["100"],"import  React ,{ useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button ,Grid  } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useSelector ,useDispatch} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {ContactsNode , AddStepNode} from \"../../Components/Flowchart/Elements\";\r\nimport ContactList from '../ContactList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid:{\r\n       height: \"100%\"\r\n    },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n}\r\n}));\r\n\r\nconst columns = [\r\n  { field: 'contactNum', headerName: 'Contact Number', width: \"100%\" },\r\n];\r\n\r\nexport default function ContactsTab() {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const[rowSelected,setrowsSelected]=useState([])\r\n\r\n    const handleRowSelection = (RowSelectedParams) => {\r\n        rowSelected.push(RowSelectedParams.data.id)\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const length = useSelector(state=> state.workflow.elements.length);\r\n  \r\n    const handleSave = ()=>{\r\n      dispatch({ type: 'CONTACTS_SELECTED' , contactsSelected: rowSelected , \r\n      add_element:{id: length+1, parent: {id: length},childOf:{number: length}, name: 'contacs',compo: <ContactsNode/>, children: []},\r\n     })\r\n     dispatch({type: 'ADD_STEP_ELEMENT',\r\n     add_step_element:{id: length+2, parent: {id: length+1},childOf:{number: length+1}, name: 'stepNode',compo: <AddStepNode/>, children: []},})\r\n      history.push(\"/details\");\r\n    }\r\n    const handleCancel = ()=>{\r\n      history.push(\"/details\");\r\n    }\r\n    return  (\r\n      <Grid container direction=\"column\" justify=\"center\" className={classes.grid}>\r\n            <Grid item style={{ height: 380 , width: '100%' }}>\r\n             <DataGrid \r\n                rows={ContactList} \r\n                columns={columns} \r\n                onRowSelected={handleRowSelection} \r\n                checkboxSelection \r\n                hideFooter\r\n                />\r\n            </Grid>\r\n            <Grid item >\r\n             <Button \r\n                onClick={handleSave}\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                size=\"small\" \r\n                className={classes.button}>\r\n                  Save\r\n                </Button>\r\n                <Button \r\n                  onClick={handleCancel}\r\n                  variant=\"contained\" \r\n                  size=\"small\"\r\n                  className={classes.button}>\r\n                    Cancel\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\index.js",["101"],"import React from 'react';\r\nimport Tree from 'react-vertical-tree';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function FlowChart() {\r\n\r\n  const elements = useSelector(state=> state.workflow.elements);\r\n\r\n  function getNestedChildren(arr, childOf) {\r\n    var children = [];\r\n    for(var i =0; i < arr.length; ++i) {\r\n        if(arr[i].childOf.number == childOf.number) {\r\n            var grandChildren = getNestedChildren(arr, {number: arr[i].id})\r\n\r\n            if(grandChildren.length) {\r\n                arr[i].children = grandChildren;\r\n            }\r\n            children.push( arr[i]);\r\n        }\r\n    }\r\n    return children;\r\n  }\r\n\r\n    return (\r\n      <>\r\n       <Tree \r\n        data={getNestedChildren(elements,{number: 0})} \r\n        direction \r\n        render={ item => <>{item.compo}</>}\r\n        />\r\n      </>\r\n    );\r\n  }","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\Flowchart\\OptionModal.js",["102"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Card , CardContent , Grid , Typography} from '@material-ui/core';\r\nimport {useSelector , useDispatch} from 'react-redux';\r\nimport SmsOutlinedIcon from '@material-ui/icons/SmsOutlined';\r\nimport PermContactCalendarOutlinedIcon from '@material-ui/icons/PermContactCalendarOutlined';\r\nimport WatchLaterOutlinedIcon from '@material-ui/icons/WatchLaterOutlined';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: 20\r\n  },\r\n  title:{\r\n    fontSize: \"12px\",\r\n  },\r\n  card:{\r\n    height:\"60px\",\r\n    width: \"70px\",\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#d3d3d3 !important\",\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal({open,handleClose}) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();    \r\n  const length = useSelector(state=> state.workflow.elements.length);\r\n\r\n  const handleContactClick = ()=>{\r\n      dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n      history.push(\"/contacts\");\r\n  }\r\n  const handleSMSClick = ()=>{\r\n    dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n      history.push(\"/sms\");\r\n}\r\nconst handleDelayClick = ()=>{\r\n  dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n  history.push(\"/delay\");\r\n}\r\nconst handleConditionClick = ()=>{\r\n  dispatch({ type: 'REMOVE_END_ELEMENTS'});\r\n  history.push(\"/condition\");\r\n}\r\n\r\n  return (\r\n        <div className={classes.paper}>\r\n          <Typography align=\"center\" className={classes.title}>\r\n              Add Next Steps to Your Workflow\r\n            </Typography>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\" >\r\n                <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleContactClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\" >\r\n                              <Grid item>\r\n                                 <PermContactCalendarOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                    Contacts\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleSMSClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\" >\r\n                              <Grid item>\r\n                                <SmsOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                   SMS\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleDelayClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\"  >\r\n                              <Grid item>\r\n                                 <WatchLaterOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                 Delay\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card} onClick={handleConditionClick}>\r\n                            <CardContent> \r\n                            <Grid container direction=\"column\" >\r\n                              <Grid item>\r\n                                  <SettingsOutlinedIcon color=\"primary\" style={{fontSize:\"20px\"}}/>\r\n                              </Grid>\r\n                              <Grid item>\r\n                              <Typography variant=\"caption\">\r\n                                Condition\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n          </Grid>\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\Dell\\Desktop\\Assignment\\visual_workflow_builder\\src\\Components\\routes.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":50,"nodeType":"109","messageId":"110","endLine":1,"endColumn":54},{"ruleId":"107","severity":1,"message":"111","line":5,"column":3,"nodeType":"109","messageId":"110","endLine":5,"endColumn":9},{"ruleId":"107","severity":1,"message":"111","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":9},{"ruleId":"107","severity":1,"message":"112","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":10},{"ruleId":"107","severity":1,"message":"113","line":3,"column":23,"nodeType":"109","messageId":"110","endLine":3,"endColumn":34},{"ruleId":"107","severity":1,"message":"114","line":92,"column":11,"nodeType":"109","messageId":"110","endLine":92,"endColumn":20},{"ruleId":"107","severity":1,"message":"114","line":105,"column":11,"nodeType":"109","messageId":"110","endLine":105,"endColumn":20},{"ruleId":"107","severity":1,"message":"115","line":5,"column":56,"nodeType":"109","messageId":"110","endLine":5,"endColumn":61},{"ruleId":"107","severity":1,"message":"115","line":5,"column":45,"nodeType":"109","messageId":"110","endLine":5,"endColumn":50},{"ruleId":"107","severity":1,"message":"116","line":29,"column":23,"nodeType":"109","messageId":"110","endLine":29,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":12,"column":34,"nodeType":"119","messageId":"120","endLine":12,"endColumn":36},{"ruleId":"107","severity":1,"message":"121","line":33,"column":9,"nodeType":"109","messageId":"110","endLine":33,"endColumn":15},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Divider' is defined but never used.","'useDispatch' is defined but never used.","'condition' is assigned a value but never used.","'Paper' is defined but never used.","'setrowsSelected' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'length' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]